import pandas as pd
import sys
import numpy as np

file = sys.argv[1]
df = pd.read_csv(file, sep="\t")

accurate = df["predict"]
label = df["label"]
pAHat = df["pABar"]

test_num = accurate == label
print(sum(test_num))
test_acc = sum(test_num) / float(len(label))
print(sum(df["correct"]))

if float(sys.argv[2]) == 0.6:
	P_Base = [0.66666666666666666667, 0.70, 0.74666666666666666667, 0.796, 0.80426666666666666667, 0.84049777777777777778, \
	0.85034666666666666667, 0.86814577777777777778, 0.88905386666666666667, 0.89291838577777777778, 0.9103582966518518518518518519, \
	0.9152137329777777777777777778, 0.9243725148918518518518518519, 0.9353942072433777777777777778, 0.9374898231644918518518518519, \
	0.9470487811482105679012345679, 0.9497326442189558518518518519, 0.9548841866230675279012345679, 0.9611499493394617078518518519, \
	0.9623573317928531791012345679]

if float(sys.argv[2]) == 0.65:
	P_Base = [0.73076923076923076924, 0.80, 0.83576923076923076924, 0.89177958579881656805, 0.90743173076923076924, \
	0.92522208579881656805, 0.94943260148782430588, 0.95375271861131656805, 0.96341261156594930588, 0.97513809709079962624, \
	0.9761344207370430558716431497, 0.9814990016763465012385770806, 0.9874488075139197131068299665, 0.9874683130733456467463895806, \
	0.9904666260535137255580018415, 0.9929607428154067494075223931, 0.9933501516680958044550965681, 0.9950278100345198085276259916, \
	0.9960536753806766990331605329, 0.9964471599836247781811095731]

if float(sys.argv[2]) == 0.7:
    P_Base = [0.78571428571428571429, 0.90, 0.90571428571428571429, 0.94416326530612244898, 0.971441399416909621, \
            0.97440326530612244898, 0.982781399416909621, 0.99045442832153269472, 0.992783279416909621, 0.99445518032153269472, \
            0.9967148564806568691616588326, 0.9980558571215326947105372761, 0.9982001356606568691616588326, 0.9988560809922815153549966426, \
            0.999368903972200649437855704, 0.9994237546948775153549966426, 0.999601134123262649437855704, 0.999770045938709649759081016, \
            0.999822217227073673437855704, 0.999861880458754228959081016]

if float(sys.argv[2]) == 0.75:
	P_Base = [0.83333333333333333334, 0.94444444444444444445, 0.95833333333333333334, 0.97569444444444444445, 0.98929398148148148149, \
	0.99578028549382716050, 0.99661820023148148149, 0.99797755111882716050, 0.99907153722190072017, 0.99961930472500857339, \
	0.9996895181789319701646090535, 0.9998124237740808390132030178, 0.9999124009041247653481510059, 0.9999634291936376984754253353, \
	0.9999699342874942111489322559, 0.9999817352701643403211284603, 0.9999913895799689589553094217, 0.9999963678829031884210976067, \
	0.99999700021640440807869199, 0.9999981713017574399250420037]

if float(sys.argv[2]) == 0.8:
    P_Base = [0.875, 0.96875, 0.9921875, 0.99275, 0.9969875, 0.999006875, 0.99970371875, \
                0.9999163296875, 0.99991875875, 0.9999654816875, \
                0.999988221621875, 0.99999636420546875, 0.9999989405233671875, 0.99999895943106875, 0.9999995539403271875, \
                0.999999845698265796875, 0.99999995166789444921875, 0.9999999857100488123046875, 0.99999998589341508921875, 0.9999999939241737659046875]

if float(sys.argv[2]) == 0.9:
    P_Base = [0.94444444444444444445, 0.9938271604938271605, 0.99931412894375857339, 0.99992379210486206371, 0.99999153245609578486, \
    0.99999905916178842054, 0.99999953245609578486, 0.99999985916178842054, 0.99999997546242093562, 0.9999999963847134373, \
    0.999999999509412604143401409, 0.9999999999366014004603779343, 0.999999999992066822273375326, 0.9999999999990296469192639251, \
    0.9999999999998832941021404361, 0.9999999999999861437891267151, 0.9999999999999912941021404361, 0.9999999999999976637891267151, \
    0.9999999999999995955321251906, 0.9999999999999999397702361323]


#P_Base = [0.875, 0.96875, 0.9921875, 0.99275, 0.9969875, 0.999006875, 0.9997037187, 0.9999163296875, 0.99991875875, 0.9999654816875]
for r in range(len(P_Base)):
	
	certify_r = pAHat >= P_Base[r]
	certify_num = test_num & certify_r
	
	#print(certify_num)
	#print(sum(certify_num))
	certify_acc = sum(certify_num) / float(len(label))
	print('K:', r+1, 'test acc:', test_acc, 'certify_acc:', certify_acc)
